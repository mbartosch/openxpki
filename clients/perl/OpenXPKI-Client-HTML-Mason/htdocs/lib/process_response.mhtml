%# This component checks if the client is in the correct state to read
%# a response from the server ('can_receive'). If this is the case,
%# it fetches the server response, analyzes the output and dispatches
%# the response to the most specific rendering component available.
%#
<%perl>
  if ($session_context->{client}->get_communication_state() 
      eq 'can_receive') {
      my $response = $session_context->{client}->collect();
      my $service_msg = $response->{SERVICE_MSG};

      my $command;
      my $comp_path;
      if ($service_msg eq 'COMMAND') {
          # offload this to a COMMAND renderer
	  $comp_path = '/Renderer/Command';
	  $command = $response->{COMMAND};
      } else {
          # process service message response
	  $comp_path = '/Renderer/Service',
          $command = $service_msg;
      }

      eval {
          $m->comp("$comp_path/$command.mhtml",
	      response => $response);
      };
      if ($EVAL_ERROR) {
          $context{debug}("Eval error: $EVAL_ERROR");
          $m->comp("$comp_path/default.mhtml",
              response => $response);
      }
  }
</%perl>
<%once>
  use Data::Dumper;
</%once>
<%init>
  my $session_context = $m->comp('/lib/getsession.mhtml', %ARGS);
</%init>
