<token_config>

    <token id="default">
        <backend>OpenXPKI::Crypto::Backend::OpenSSL</backend>
        <!--
            if the token support sessions then you can use session and daemon too

            session - token will be logged out at end of session
            daemon  - token will be only logged out explicitly
        -->
        <mode>standby</mode>

        <!-- possible values are OpenSSL, nCipher, LunaCA -->
	<engine>OpenSSL</engine>
	<engine_section></engine_section>
        <key_store>OPENXPKI</key_store>
        <engine_usage></engine_usage>

	<!-- OpenSSL binary location -->
        <!-- <shell>/opt/local/bin/openssl</shell> -->
        <!-- <shell>/opt/local/bin/openssl</shell> -->
        <shell>__GOST_OPENSSL__</shell>

	<!-- OpenSSL binary call gets wrapped with this command -->
        <wrapper></wrapper>

	<!-- random file to use for OpenSSL        -->
        <!-- <randfile>t/25_crypto/rand</randfile> -->
        <randfile>t/25_crypto/rand</randfile>

    </token>

    <token id="ca1" super="common/token_config/token{default}">
        <!-- CA key (PEM encoded) -->
        <key>t/25_crypto/ca1/cakey.pem</key>

	<!-- CA passphrase -->
        <secret>default</secret>
    </token>

    <token id="ca2" super="common/token_config/token{ca1}">
        <!-- CA key (PEM encoded) -->
        <key>t/25_crypto/ca2/cakey.pem</key>

	<!-- CA passphrase -->
        <secret>default</secret>
    </token>

    <token id="default_gost" super="common/token_config/token{default}">

        <!-- possible values are OpenSSL, nCipher, LunaCA -->
	<engine>GOST</engine>
	<engine_section>
            dynamic_path = __GOST_ENGINE_LIBRARY__
            engine_id = gost
        </engine_section>
        <key_store>OPENXPKI</key_store>
        <engine_usage>ALWAYS</engine_usage>

	<!-- OpenSSL binary location -->
        <!-- <shell>/opt/local/bin/openssl</shell> -->
        <!-- <shell>/opt/local/bin/openssl</shell> -->
        <shell>/opt/local/bin/openssl</shell>

    </token>

    <token id="cagost" super="common/token_config/token{default_gost}">

	<!-- OpenSSL binary call gets wrapped with this command -->
        <!-- CA key (PEM encoded) -->
        <key>t/25_crypto/cagost/cakey.pem</key>

        <!-- CA certificate, must be in PEM format -->
        <cert>t/25_crypto/cagost/cacert.pem</cert>

        <!-- CA certificate chain for crypto operations -->
        <internal_chain>t/25_crypto/cagost/cacert.pem</internal_chain>

        <!-- CA passphrase -->
        <secret>default</secret>
    </token>

    <token id="default_nciph" super="common/token_config/token{default}">

        <engine>nCipher</engine>
        <engine_section>engine_id   = chil
<!-- dynamic_path = /usr/local/openssl_dist/openssl/lib/engines/libchil.so -->
<!-- SO_PATH = /opt/nfast/toolkits/hwcrhk/libnfhwcrhk.so -->
dynamic_path = __CHIL_LIBRARY__
SO_PATH = __NCIPHER_LIBRARY__
THREAD_LOCKING = 1
        </engine_section>
        <key_store>ENGINE</key_store>
        <engine_usage>ALWAYS</engine_usage>
        <wrapper>/opt/nfast/bin/with-nfast -M</wrapper>

	<!-- OpenSSL binary location -->
        <!-- <shell>/opt/local/bin/openssl</shell> -->
        <!-- <shell>/opt/local/bin/openssl</shell> -->
        <shell>/opt/local/bin/openssl</shell>

    </token>

    <token id="canciph" super="common/token_config/token{default_nciph}">

        <key>__NCIPHER_KEY__</key>

        <secret>hsm</secret>

    </token>

</token_config>
