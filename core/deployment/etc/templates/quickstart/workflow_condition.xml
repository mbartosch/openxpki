<conditions>

  <!-- always write the ACL conditions first followed by the normal conditions -->

  <!-- general CSR conditions -->

  <condition name="server_key_generation" class="OpenXPKI::Server::Workflow::Condition::IsServerKeyGeneration">
  </condition>

 <!-- TODO: in many cases, param name is useless, one can just read the
      condition name instead. This is only useful if activity is different
      from the ACL name -->
  <condition name="ACL::create_csr" class="OpenXPKI::Server::Workflow::Condition::ACL">
    <param name="activity" value="create_csr"/>
  </condition>
  <condition name="ACL::change_csr_role" class="OpenXPKI::Server::Workflow::Condition::ACL">
    <param name="activity" value="change_csr_role"/>
  </condition>
  <condition name="ACL::change_csr_profile" class="OpenXPKI::Server::Workflow::Condition::ACL">
    <param name="activity" value="change_csr_profile"/>
  </condition>
  <condition name="ACL::change_csr_subject_style" class="OpenXPKI::Server::Workflow::Condition::ACL">
    <param name="activity" value="change_csr_subject_style"/>
  </condition>
  <condition name="ACL::change_csr_subject" class="OpenXPKI::Server::Workflow::Condition::ACL">
    <param name="activity" value="change_csr_subject"/>
  </condition>
  <condition name="ACL::change_csr_subject_alt_name" class="OpenXPKI::Server::Workflow::Condition::ACL">
    <param name="activity" value="change_csr_subject_alt_name"/>
  </condition>
  <condition name="ACL::change_csr_info" class="OpenXPKI::Server::Workflow::Condition::ACL">
    <param name="activity" value="change_csr_info"/>
  </condition>
  <condition name="ACL::approve_csr" class="OpenXPKI::Server::Workflow::Condition::ACL">
    <param name="activity" value="approve_csr"/>
  </condition>
  <condition name="ACL::cancel_csr_approval" class="OpenXPKI::Server::Workflow::Condition::ACL">
    <param name="activity" value="cancel_csr_approval"/>
  </condition>
  <condition name="ACL::insert_csr" class="OpenXPKI::Server::Workflow::Condition::ACL">
    <param name="activity" value="insert_csr"/>
  </condition>
  <condition name="ACL::persist_csr" class="OpenXPKI::Server::Workflow::Condition::ACL">
    <param name="activity" value="persist_csr"/>
  </condition>
  <condition name="ACL::execute_csr" class="OpenXPKI::Server::Workflow::Condition::ACL">
    <param name="activity" value="execute_csr"/>
  </condition>
  <condition name="ACL::reject_csr" class="OpenXPKI::Server::Workflow::Condition::ACL">
    <param name="activity" value="reject_csr"/>
  </condition>

  <condition name="Condition::check_csr_approvals" class="OpenXPKI::Server::Workflow::Condition::Approved">
    <param name="role" value="RA Operator"/>
  </condition>

  <!-- general CRR conditions -->

  <condition name="certificate_not_yet_revoked" class="OpenXPKI::Server::Workflow::Condition::CertificateNotYetRevoked">
    <!-- here you can set whether you want accept more CRRs while the
         certificate is still in state CRL_ISSUANCE_PENDING (as compared
         to REVOKED) or not -->
    <param name="crl_issuance_pending_accept" value="1"/>
  </condition>
  <condition name="ACL::create_crr" class="OpenXPKI::Server::Workflow::Condition::ACL">
    <param name="activity" value="create_crr"/>
  </condition>
  <condition name="ACL::change_crr_invalidity_time" class="OpenXPKI::Server::Workflow::Condition::ACL">
    <param name="activity" value="change_crr_invalidity_time"/>
  </condition>
  <condition name="ACL::change_crr_reason" class="OpenXPKI::Server::Workflow::Condition::ACL">
    <param name="activity" value="change_crr_reason"/>
  </condition>
  <condition name="ACL::approve_crr" class="OpenXPKI::Server::Workflow::Condition::ACL">
    <param name="activity" value="approve_crr"/>
  </condition>
  <condition name="ACL::cancel_crr_approval" class="OpenXPKI::Server::Workflow::Condition::ACL">
    <param name="activity" value="cancel_crr_approval"/>
  </condition>
  <condition name="ACL::revoke_certificate" class="OpenXPKI::Server::Workflow::Condition::ACL">
    <param name="activity" value="revoke_certificate"/>
  </condition>
  <condition name="ACL::insert_crr" class="OpenXPKI::Server::Workflow::Condition::ACL">
    <param name="activity" value="insert_crr"/>
  </condition>
  <condition name="ACL::reject_crr" class="OpenXPKI::Server::Workflow::Condition::ACL">
    <param name="activity" value="reject_crr"/>
  </condition>

  <condition name="Condition::check_crr_approvals" class="OpenXPKI::Server::Workflow::Condition::Approved">
    <param name="role" value="RA Operator"/>
  </condition>

  <!-- check for system-instantiated workflow -->
  <condition name="ACL::start_certificate_issuance" class="OpenXPKI::Server::Workflow::Condition::ACL">
    <param name="activity" value="certificate_issuance_start"/>
  </condition>

  <!-- key online checks -->
  <condition name="ca_key_usable" class="OpenXPKI::Server::Workflow::Condition::Key"> 
  </condition>

  <!-- conditions relevant for CRL issuance -->
  <condition name="ACL::start_crl_issuance" class="OpenXPKI::Server::Workflow::Condition::ACL">
    <param name="activity" value="start_crl_issuance"/>
  </condition>
  <condition name="crl_signing_cas_left" class="OpenXPKI::Server::Workflow::Condition::CRLSigningCAsLeft">
    <!-- use condition name ($self->name) to determine what we want to do -->
  </condition>

  <condition name="valid_csr_serial_present" class="OpenXPKI::Server::Workflow::Condition::ValidCSRSerialPresent">
  </condition>

  <!-- conditions for child workflow control -->
  <condition name="wf_child_instance_finished" class="OpenXPKI::Server::Workflow::Condition::WorkflowChildrenSuccessfullyFinished">
  </condition>
  <condition name="wf_children_instances_finished" class="OpenXPKI::Server::Workflow::Condition::WorkflowChildrenSuccessfullyFinished">
  </condition>
  <condition name="wf_child_instance_success" class="OpenXPKI::Server::Workflow::Condition::WorkflowChildrenSuccessfullyFinished">
  </condition>
  <condition name="wf_child_instance_failure" class="OpenXPKI::Server::Workflow::Condition::WorkflowChildrenFailure">
  </condition>

 <!-- condition for bypassing publishing certificates using ldap -->
  <condition name="use_ldap" class="OpenXPKI::Server::Workflow::Condition::UseLdap">
  </condition>
</conditions>

